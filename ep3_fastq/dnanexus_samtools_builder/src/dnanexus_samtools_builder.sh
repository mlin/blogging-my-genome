#!/bin/bash
# dnanexus_samtools_builder 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.
    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    set -x

    # avoid using local proxy server since apt needs to access ppa;
    # it will be able to do so because the applet has internet access
    grep -iR proxy /etc/apt/apt.conf.d/
    rm /etc/apt/apt.conf.d/99dnanexus
    add-apt-repository -y ppa:ubuntu-toolchain-r/test
    apt-get update
    apt-get install -y gcc-4.8 g++-4.8
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50

    wget https://gflags.googlecode.com/files/libgflags0_2.0-1_amd64.deb
    dpkg -i libgflags0_2.0-1_amd64.deb
    wget https://gflags.googlecode.com/files/libgflags-dev_2.0-1_amd64.deb
    dpkg -i libgflags-dev_2.0-1_amd64.deb

    git clone https://github.com/dnanexus/htslib.git
    git clone https://github.com/dnanexus/samtools.git
    samtools_rev=$(git --git-dir samtools/.git rev-parse HEAD)
    make -C samtools

    samtools=$(dx upload samtools/samtools --brief --property git_revision=$samtools_rev)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output samtools "$samtools" --class=file

    ldd samtools/samtools
}
