#!/bin/bash
# bam_info 0.0.1
# Generated by dx-app-wizard.

# Boilerplate stuff needed to get dnanexus samtools running in the ubuntu
# 12.04 execution environment. Assumes samtools.bz2 is in /resources
install_dnanexus_samtools_inner() {
    set -x
    rm /etc/apt/apt.conf.d/99dnanexus
    add-apt-repository -y ppa:ubuntu-toolchain-r/test
    apt-get update
    apt-get install -y gcc-4.8 g++-4.8
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 50
    bzcat /samtools.bz2 > /usr/local/bin/samtools
    chmod +x /usr/local/bin/samtools
}
install_dnanexus_samtools() {
    code=0
    install_dnanexus_samtools_inner > /tmp/deploy_dnanexus_samtools.log 2>&1 || code=$?
    if [ $code -ne 0 ]; then
        cat /tmp/deploy_dnanexus_samtools.log
        exit $code
    fi
}

main() {
    echo "Value of bam: '$bam'"
    echo "Value of bai: '$bai'"

    install_dnanexus_samtools

    bam_fid=$(dx-jobutil-parse-link "$bam")
    bam_name=$(dx describe --name "$bam_fid")
    bam_name=$(basename "$bam_name" .bam)

    dx download -o input.bam "$bam_fid"

    if [ -z "$bai" ]; then
        samtools index input.bam
    else
        dx download -o input.bam.bai "$bai"
    fi

    # list target sequences
    tseqs=($(samtools view -H input.bam | awk '$1 == "@SQ" {split($2,a,":"); print a[2]; }'))

    # create a bam for each
    for tseq in "${tseqs[@]}"
    do
        dx-jobutil-add-output --class array:file bams \
            $(samtools view -bh -@ 2 input.bam "$tseq" | dx upload -o "${bam_name}.${tseq}.bam" --brief -)
    done
}
